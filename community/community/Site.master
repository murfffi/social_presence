<%@ Master Language="C#" CodeBehind="Site.master.cs" Inherits="community.Site" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Dynamic Data Site</title>
    <link href="~/Site.css" rel="stylesheet" type="text/css" />
    <link href="~/Scripts/jquery-ui.css" rel="stylesheet" type="text/css" />
    <link href="http://www.eyewalker.com/_en/restyle.css" rel="stylesheet" type="text/css" />
    <asp:ContentPlaceHolder id="head" runat="server">
    </asp:ContentPlaceHolder>
</head>
<body>
    <script>
        // This is called with the results from from FB.getLoginStatus().
        function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
                // Logged into your app and Facebook.
                testAPI();
            } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
                document.getElementById('status').innerHTML = 'Please log ' +
                  'into this app.';
            } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
                document.getElementById('status').innerHTML = 'Please log ' +
                  'into Facebook.';
            }

            return response.status;
        }

        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);            
            });
        }

        window.fbAsyncInit = function () {
            FB.init({
                appId: '541069762740573',
                cookie: true,
                xfbml: true,
                version: 'v2.5'
            });

            // Now that we've initialized the JavaScript SDK, we call 
            // FB.getLoginStatus().  This function gets the state of the
            // person visiting this page and can return one of three states to
            // the callback you provide.  They can be:
            //
            // 1. Logged into your app ('connected')
            // 2. Logged into Facebook, but not your app ('not_authorized')
            // 3. Not logged into Facebook and can't tell if they are logged into
            //    your app or not.
            //
            // These three cases are handled in the callback function.

            FB.getLoginStatus(function(response) {
                statusChangeCallback(response);
            });
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        // Here we run a very simple test of the Graph API after login is
        // successful.  See statusChangeCallback() for when this call is made.
        function testAPI() {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me?fields=id,name,email', function (response) {
                console.log('Successful login for: ' + JSON.stringify(response));
                document.getElementById('status').innerHTML =
                  'Thanks for logging in, ' + response.name + '!';
                community.LoginService.DoLogin(response.name, response.email);
            });
        }
    </script>

    <h1 class="DDMainHeader"><span class="SPMainHeader">Social Presence Editor</span></h1>
    <div class="DDNavigation">
        <a runat="server" href="~/"><img alt="Back to home page" runat="server" src="DynamicData/Content/Images/back.gif" />Back to home page</a>

        <!--
          Below we include the Login Button social plugin. This button uses
          the JavaScript SDK to present a graphical Login button that triggers
          the FB.login() function when clicked.
        -->

        <div style="float: right">
            <span class="SPLogin"><fb:login-button scope="public_profile,email" onlogin="checkLoginState();" auto_logout_link="true">
            </fb:login-button></span>
            <div id="status">
            </div>
        </div>
    </div>

    <form id="form1" runat="server">
    <div>
        <%-- TODO: Enable partial rendering by setting the EnablePartialRendering attribute to "true" to provide a smoother browsing experience.
             Leaving partial rendering disabled will provide a better debugging experience while the application is in development. --%>

        <asp:ScriptManager runat="server" EnablePartialRendering="false" LoadScriptsBeforeUI="true" EnablePageMethods="true">
            <Scripts>
                <asp:ScriptReference Name="jquery" />
                <asp:ScriptReference Name="jquery-ui" />
                <asp:ScriptReference Name="WebUIValidation.js" Assembly="System.Web" />
            </Scripts>
            <Services>
                <asp:ServiceReference Path="~/LoginService.asmx" InlineScript="true"/>
            </Services>
        </asp:ScriptManager>

        
        <asp:ContentPlaceHolder id="ContentPlaceHolder1" runat="server">
        </asp:ContentPlaceHolder>
    </div>
    <div id="dialog" style="display: none">
        <textarea><iframe src="<%= Request.Url %>"></iframe> 
        </textarea>
    </div>
    </form>
    <div id="footer">
        <div class="SPEmbedBtn"><a href="#" onclick='$( "#dialog" ).dialog()'>Embed</a></div>
    </div>

    <script>
        $(function () {
            $(document).tooltip();
        });
    </script>
</body>
</html>

